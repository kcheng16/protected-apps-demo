id: update_mywithu_localised_new
type: datasource
subtype: FirebaseQuery
resourceName: 0d4ce929-fb5a-4163-98b4-f83d95b31c4f
template:
  ordered:
    - queryRefreshTime: ''
    - lastReceivedFromResourceAt: null
    - queryDisabledMessage: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - showFailureToaster: true
    - query: ''
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - privateParams: []
    - firestoreCollection: deals
    - runWhenPageLoadsDelay: ''
    - data: null
    - importedQueryInputs:
        ordered: []
    - isImported: false
    - endAt: ''
    - firebaseService: firestore
    - showSuccessToaster: false
    - equalTo: ''
    - cacheKeyTtl: ''
    - metadata: null
    - uid: ''
    - editorMode: gui
    - actionType: updateFirestore
    - changesetObject: ''
    - setDbValue: ''
    - value: "{\n\"web\": {\n        \"content\": {\n            \"{{my_with_u_dropdown.value}}\": {\n                \"logo\": \"{{mywithu_logo_upload.data != null ? mywithu_logo_upload.data.signedUrl.split(\"?\")['0'] : MyWithULocalisedData.value.logo}}\",\n                \"deal\": {\n                    \"subtitle\": \"{{my_withu_subtitle.value}}\",\n                    \"partner\": \"{{mywithu_partner_name.value}}\",\n                    \"header_bar_large\": \"{{my_header_unlock.value}}\",\n                    \"header_bar_small\": \"{{my_header_unlock_detail.value}}\",\n                    \"title\": \"{{my_withu_title.value}}\"\n                },\n                \"redeem\": {\n                    \"subtitle\": \"{{my_withu_subtitle_redemption.value}}\",\n                    \"title\": \"{{my_withu_title_redemption.value}}\",\n                    \"textbox_title\": \"{{mywithu_code_title.value}}\",\n                    \"textbox_placeholder\": \"{{mywithu_code_placeholder.value}}\",\n                    \"textbox_button\": \"{{mywithu_code_button.value}}\"\n                },\n                \"external_partner\": {\n                \t\t\"enabled\": {{custom_redemption_page.value}},\n                \t\t\"theme_color\": \"{{theme_color.value}}\",\n                    \"partner_text\": \"{{partner_text.value}}\",\n                    \"partner_logo\": \"{{mywithu_partner_logo_upload.data != null ? mywithu_partner_logo_upload.data.signedUrl.split(\"?\")['0'] : MyWithULocalisedData.value.external_partner.partner_logo}}\",\n                    \"background_image\": \"{{mywithu_background_image_upload.data != null ? mywithu_background_image_upload.data.signedUrl.split(\"?\")['0'] : MyWithULocalisedData.value.external_partner.background_image}}\",\n                    \"dark_header\": {{dark_header.value}}\n                }\n            },\n        },\n\t}\n}"
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - filterType: ''
    - rawData: null
    - userOptions: ''
    - docId: '{{deal_list.selectedRow.data._id}}'
    - queryTriggerDelay: '0'
    - watchedParams: []
    - enableErrorTransformer: false
    - ordering: ''
    - startAt: ''
    - limitType: ''
    - showLatestVersionUpdatedWarning: false
    - dbRef: ''
    - timestamp: 0
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - phoneNumber: ''
    - nextPageToken: ''
    - runWhenPageLoads: false
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - events:
        - ordered:
            - event: success
            - type: util
            - method: showNotification
            - pluginId: ''
            - targetId: null
            - params:
                ordered:
                  - options:
                      ordered:
                        - notificationType: info
                        - title: Deal saved ðŸ¥³
                        - description: Your changes to this deal have now been saved.
            - waitType: debounce
            - waitMs: '0'
        - ordered:
            - event: success
            - type: datasource
            - method: trigger
            - pluginId: list_deals_by_name
            - targetId: null
            - params:
                ordered: []
            - waitType: debounce
            - waitMs: '0'
    - queryTimeout: '10000'
    - useRawCollectionId: false
    - firestoreOrderBy: ''
    - requireConfirmation: false
    - orderByChildValue: ''
    - queryFailureConditions: ''
    - changesetIsObject: false
    - limit: ''
    - enableCaching: false
    - firestoreOrderDirection: ''
    - allowedGroups: []
    - firestoreWhere: ''
    - email: ''
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2022-05-30T15:27:30.571Z
folder: MyWithU
