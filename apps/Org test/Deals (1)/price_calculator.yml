id: price_calculator
type: datasource
subtype: JavascriptQuery
resourceName: JavascriptQuery
template:
  ordered:
    - queryRefreshTime: ''
    - lastReceivedFromResourceAt: null
    - queryDisabledMessage: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - showFailureToaster: false
    - query: >
        let m_price = 9.99;

        let a_price = 79.99;


        if ((deal_type_picker.value === 1) & (offer_after.value === "50off")) {
          return [m_price / 2, a_price / 2];
        }


        if ((deal_type_picker.value === 1) & (offer_after.value === "25off")) {
          return [m_price - m_price / 4, a_price - a_price / 4];
        }


        if ((deal_type_picker.value === 1) & (offer_after.value === "default"))
        {
          return [m_price, a_price];
        }


        if ((deal_type_picker.value === 2) & (price_after_free.value ===
        "0HiKsINB")) {
          return [m_price / 4, a_price / 4];
        }


        if ((deal_type_picker.value === 2) & (price_after_free.value ===
        "Dn7aqYLy")) {
          return [m_price / 2, a_price / 2];
        }


        if ((deal_type_picker.value === 2) & (price_after_free.value ===
        "default")) {
          return [m_price, a_price];
        }
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - data: null
    - importedQueryInputs:
        ordered: []
    - isImported: false
    - showSuccessToaster: false
    - cacheKeyTtl: ''
    - metadata: null
    - changesetObject: ''
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - watchedParams: []
    - enableErrorTransformer: false
    - showLatestVersionUpdatedWarning: false
    - timestamp: 0
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - runWhenPageLoads: false
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - events: []
    - queryTimeout: '10000'
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2021-09-25T15:12:04.664Z
folder: Offer
