id: workouts
type: datasource
subtype: SqlQueryUnified
resourceName: 63243db9-785f-49d1-b3cc-f0c7a05c0814
template:
  ordered:
    - queryRefreshTime: ''
    - records: ''
    - lastReceivedFromResourceAt: null
    - databasePasswordOverride: ''
    - queryDisabledMessage: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - showFailureToaster: true
    - query: |-
        SELECT
          *
        FROM (
          SELECT
            *
          FROM
            `withu-production.users.workouts`
          WHERE
            Date(local_timestamp) >= PARSE_DATETIME('%Y-%m-%d',  '{{stats_select_dates.startFormattedString}}')
            AND Date(local_timestamp) <= PARSE_DATETIME('%Y-%m-%d',  '{{stats_select_dates.endFormattedString}}')
          ORDER BY
            local_timestamp) AS Workouts
        LEFT JOIN (
          SELECT
            *
          FROM
            (SELECT
            id,
             user_id
          FROM
            users.users
          WHERE
            link_url IN ( '{{stats_links.value}}' )  or deal_id = '{{stats_dealid.value}}' or REGEXP_CONTAINS(email,r'{{stats_domains.value}}')) ) AS Users

        ON
          Users.user_id = Workouts.user_id
        Where id is not null
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - warningCodes: []
    - data: null
    - recordId: ''
    - importedQueryInputs:
        ordered: []
    - isImported: false
    - showSuccessToaster: false
    - dataArray: []
    - cacheKeyTtl: ''
    - filterBy: ''
    - databaseHostOverride: ''
    - metadata: null
    - editorMode: sql
    - actionType: ''
    - changesetObject: ''
    - shouldUseLegacySql: false
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - databaseNameOverride: ''
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - watchedParams: []
    - enableErrorTransformer: false
    - enableBulkUpdates: false
    - showLatestVersionUpdatedWarning: false
    - timestamp: 0
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - bulkUpdatePrimaryKey: ''
    - runWhenPageLoads: false
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - events:
        - ordered:
            - event: success
            - type: datasource
            - method: trigger
            - pluginId: get_workouts_start_completed
            - params:
                ordered: []
            - waitType: debounce
            - waitMs: '0'
    - tableName: users.users
    - queryTimeout: '10000'
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - databaseUsernameOverride: ''
    - shouldEnableBatchQuerying: false
    - doNotThrowOnNoOp: false
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2021-11-07T16:33:14.222Z
folder: Stats
